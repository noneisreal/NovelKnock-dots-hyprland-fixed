#!/usr/bin/env bash
set -euo pipefail
IFS=$'\n\t'

#########testing########
# bat_dir=/tmp/fakeBAT0
# if you want to test but with no battery in your PC, use this scripts
# mkdir -p /tmp/fakeBAT0
# echo 50 > /tmp/fakeBAT0/capacity
# echo Charging > /tmp/fakeBAT0/status
# echo 4000000 > /tmp/fakeBAT0/voltage_now
# echo 1000000 > /tmp/fakeBAT0/current_now
# echo 10000000 > /tmp/fakeBAT0/charge_full
# echo 5000000 > /tmp/fakeBAT0/charge_now

##########scan folder#########
bat_dir=$(find /sys/class/power_supply -maxdepth 1 -type d -name 'BAT*' | head -n1)
if [[ -z "$bat_dir" ]]; then
	echo '{"quickicon": "", "icon": "", "percentage": 100, "wattage": "0 W", "status": "no-battery", "circolor": "transparent", "cirbgcolor": "transparent", "color": "transparent", "bgcolor": "transparent" }'
	exit 0
fi

icons=("" "" "" "" "" "" "" "")
warnedlow=0

gettime() {
	FULL=$(cat "$bat_dir"/charge_full | head -1)
	NOW=$(cat "$bat_dir"/charge_now | head -1)

	if [[ "$RATE" -gt 0 ]]; then
		if [[ "$STATE" = "Discharging" ]]; then
			EX="$NOW / $RATE"
		else
			EX="($FULL - $NOW) / $RATE"
		fi
		date -u -d@"$(bc -l <<< "$EX * 3600")" +%H:%M
	fi
}

geticon() {
	if [[ "$STATE" = "Charging" ]]; then
    level=$(awk -v n="$CAPACITY" 'BEGIN{print int((n-1)/12)}')
		echo "${icons[$level]}"
	else
    level=$(awk -v n="$CAPACITY" 'BEGIN{print int((n-1)/12)}')
		echo "${icons[$level]}"
	fi
}

status() {
	if [[ "$STATE" = "Charging" ]]; then
		echo -n "charging"
		if [[ "$RATE" -gt 0 ]]; then
			echo ", $(gettime) left"
		else
			echo ""
		fi
	elif [[ "$STATE" = "Discharging" ]]; then
		echo "$(gettime)h left"
	else
		echo "fully charged"
	fi
}

statch() {
	if [[ "$STATE" = "Discharging" ]]; then #Not charging, below 20%
		if [[ "$CAPACITY" -le 5 ]]; then
			echo 'deadly'
		elif [[ "$CAPACITY" -le 10 ]]; then
			echo 'critical'
		elif [[ "$CAPACITY" -le 30 ]]; then
			echo 'low'
		else 
			echo 'normal'
		fi
	else 
		echo 'charging'
	fi
}

chargestatus() {
	if [[ "$STATE" = "Charging" ]]; then
		echo -n ""
	elif [[ "$STATE" = "Discharging" ]]; then
		echo -n ""
	fi
}

circolor() {
	if [[ "$CAPACITY" -le 20 && "$STATE" = "Discharging" ]]; then
		cat css/_iconcolor.txt | head -1
	else
		cat css/_iconcolor.txt | head -1
	fi
}

cirbgcolor() {
	if [[ "$CAPACITY" -le 20 && "$STATE" = "Discharging" ]]; then
		echo '#EF738A'
	else
		echo 'transparent'
	fi
}

color() {
	if [[ "$CAPACITY" -le 20 ]]; then
		echo '#EF738A'
	else
		echo 'white'
	fi
}

bgcolor() {
	if [[ "$CAPACITY" -le 20 ]]; then
		echo '#EF738A'
	else
		echo 'transparent'
	fi
}

wattage() {
	echo "$(bc -l <<< "scale=1; $RATE / 1000000") W"
}


while true; do
	RATE=$(cat "$bat_dir"/voltage_now | head -1)
	CAPACITY=$(cat "$bat_dir"/capacity | head -1)
	STATE=$(cat "$bat_dir"/status | head -1)

	if [[ -n "$CAPACITY" && "$STATE" = "Discharging" ]]; then
		if [[ "$CAPACITY" -le 5 ]]; then
			if [[ "$warnedlow" -eq 0 ]]; then 
				warnedlow=1
				notify-send 'FREAKING PLUG IN THE CHARGER ALREADY' '!!111!!1!123!!!' -u critical -a 'eww'
			fi
		elif [[ "$CAPACITY" -le 10 && "$STATE" = "Discharging" ]]; then
			if [[ "$warnedlow" -eq 0 ]]; then 
				warnedlow=1
				notify-send 'Battery verrry low' 'Hello?' -u critical -a 'eww'
			fi
		elif [[ "$CAPACITY" -le 20 && "$STATE" = "Discharging" ]]; then
			if [[ "$warnedlow" -eq 0 ]]; then 
				warnedlow=1
				notify-send 'Battery low' 'Plug in your charger pweeeeaaase :>' -u critical -a 'eww'
			fi
		else
			warnedlow=0
		fi
	fi
	echo '{"quickicon": "'"$(chargestatus)"'", "icon": "'"$(geticon)"'", "percentage": '"$CAPACITY"', "wattage": "'"$(wattage)"'", "status": "'"$(status)"'", "circolor": "'"$(circolor)"'", "cirbgcolor": "'"$(cirbgcolor)"'", "color": "'"$(color)"'", "bgcolor": "'"$(bgcolor)"'" }'
	sleep 3
done